openapi: 3.0.0
info:
  title: cx-salesorg-service-v1
  description: SalesOrg service API
  version: '1'
tags:
  - name: SalesOrgController
    description: Sales Org Controller
servers:
  - url: 'http://localhost:3000'
paths:
  '/salesOrgs/{salesOrgCode}':
    parameters:
      - $ref: '#/components/parameters/salesOrgCode'
    get:
      summary: Return SalesOrg by code
      operationId: get-salesOrgs-salesOrgCode
      responses:
        '200':
          $ref: '#/components/responses/SalesOrg'
        '400':
          $ref: '#/components/responses/400'
      tags:
        - SalesOrgController
      description: |-
        Return SalesOrg by code

        Possible error codes:
        - SOR-001
    post:
      summary: Create new SalesOrg
      operationId: post-salesOrgs-salesOrgCode
      responses:
        '200':
          $ref: '#/components/responses/SalesOrg'
        '400':
          $ref: '#/components/responses/400'
      tags:
        - SalesOrgController
      requestBody:
        $ref: '#/components/requestBodies/CreateSalesOrg'
      description: |-
        Creates a new SalesOrg based on the request body

        Possible error codes:
        - SOR-000
        - SOR-002
    put:
      summary: Update existing SalesOrg by code
      operationId: put-salesOrgs-salesOrgCode
      responses:
        '200':
          $ref: '#/components/responses/SalesOrg'
        '400':
          $ref: '#/components/responses/400'
      requestBody:
        $ref: '#/components/requestBodies/UpdateSalesOrg'
      description: |-
        Updates an existing SalesOrg (by the sales org code in the path) based on the request body

        At least one of the body fields must be not null

        Possible error codes:
        - SOR-000
        - SOR-001
        - SOR-003
  /salesOrgs:
    get:
      summary: Return all SalesOrgs
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/token'
      tags:
        - SalesOrgController
      responses:
        '200':
          $ref: '#/components/responses/SalesOrgPage'
        '400':
          $ref: '#/components/responses/400'
      operationId: get-salesOrgs
      description: Return all SalesOrgs
components:
  schemas:
    WithErrorCode-v1:
      title: Errors With Error Code
      type: object
      properties:
        title:
          type: string
          description: 'A short summary of the problem type. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.'
          example: Bad Request
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 100
          example: 400
        detail:
          type: string
          description: 'A human readable explanation specific to this occurrence of the problem that is helpful to locate the problem and give advice on how to proceed. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.'
          example: 'Customer: ''620069'' not found'
        errorCode:
          type: string
          description: The error code of this problem
          example: CSP-001
        errorMetadata:
          type: object
          description: Specific metadata for the error code
      required:
        - title
        - status
        - detail
        - errorCode
    Token-v1:
      title: token-v1
      type: object
      properties:
        token:
          type: string
          description: The token for the next page
        size:
          type: integer
          description: the size of each page
      description: 'Pagination metadata for token method '
    InfraDetails-v1:
      title: infraDetails-v1
      type: object
    SalesOrg-v1:
      title: salesOrg-v1
      type: object
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 6
        description:
          type: string
        alpha2:
          type: string
          minLength: 1
          maxLength: 2
        alpha3:
          type: string
          minLength: 1
          maxLength: 3
        status:
          type: string
        infraDetails:
          $ref: '#/components/schemas/InfraDetails-v1'
      required:
        - code
        - description
        - alpha2
        - alpha3
        - status
    SalesOrgCreate-v1:
      title: salesOrgCreate-v1
      type: object
      properties:
        description:
          type: string
        alpha2:
          type: string
          minLength: 1
          maxLength: 2
        alpha3:
          type: string
          minLength: 1
          maxLength: 3
        status:
          type: string
        infraDetails:
          $ref: '#/components/schemas/InfraDetails-v1'
      required:
        - description
        - alpha2
        - alpha3
        - status
    SalesOrgUpdate-v1:
      title: salesOrgCreate-v1
      type: object
      properties:
        description:
          type: string
        alpha2:
          type: string
          minLength: 1
          maxLength: 2
        alpha3:
          type: string
          minLength: 1
          maxLength: 3
        status:
          type: string
        infraDetails:
          $ref: '#/components/schemas/InfraDetails-v1'
  responses:
    '400':
      description: |-
        Bad request errors:

        - SOR-000 - Mandatory fields is not on the request body
        - SOR-001 - SalesOrg does not exist
        - SOR-002 - SalesOrg already exists
        - SOR-003 - SalesOrg not modified - No new data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WithErrorCode-v1'
          examples:
            SOR-001 - SalesOrg does not exist:
              value:
                title: Bad Request
                status: 400
                detail: SalesOrg 'X001' not found
                errorCode: SOR-001
                errorMetadata: {}
            SOR-002 - SalesOrg already exists:
              value:
                title: Bad Request
                status: 400
                detail: SalesOrg 'D001' already exists
                errorCode: SOR-002
                errorMetadata: {}
    SalesOrg:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOrg-v1'
    SalesOrgPage:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              content:
                type: array
                items:
                  $ref: '#/components/schemas/SalesOrg-v1'
              pagination:
                $ref: '#/components/schemas/Token-v1'
            required:
              - content
              - pagination
  parameters:
    salesOrgCode:
      name: salesOrgCode
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 6
      description: SalesOrg identifier code
    token:
      name: token
      in: query
      required: false
      schema:
        type: string
    size:
      name: size
      in: query
      required: false
      schema:
        type: integer
  requestBodies:
    CreateSalesOrg:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOrgCreate-v1'
    UpdateSalesOrg:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOrgUpdate-v1'